{"version":3,"sources":["api/DataService.js","components/TrendChart.js","components/Retail.js","components/TravelEnt.js","components/Services.js","components/GoogleCharts.js","components/App.js","index.js"],"names":["DataService","Data","Retail","TravelEnt","Services","TrendChart","props","console","log","responsive","data","labels","map","d","WeekOf","datasets","label","fill","backgroundColor","pointRadius","borderColor","borderWidth","lineTension","VolGrowth","TxnGrowth","borderDash","VolGrowthAVG","TxnGrowthAVG","options","interaction","mode","intersect","hover","intersec","title","display","fontSize","legend","position","scales","x","grid","text","color","font","family","size","weight","lineHeight","padding","top","left","right","bottom","y","type","ticks","stepSize","ChartData","getRetail","className","TravelEntData","getTravelEnt","ServicesData","getServices","GoogleCharts","useState","setRetail","ds","useEffect","items","dataRows","i","length","para_arr","push","resultData","populateRetailChartData","chartType","loader","graphID","width","height","hAxis","vAxis","series","2","lineDashStyle","3","App","selectedTabIndex","setSelectedTabIndex","onTabSelection","tabIndex","href","onClick","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.81478f1b.chunk.js","sourcesContent":["import { default as Data } from '../db/consumer-trends'\n\nexport default class DataService {\n    getAll() {\n        return Data;\n    }\n\n    getRetail() {\n        return Data.Retail;\n    }\n\n    getTravelEnt() {\n        return Data.TravelEnt;\n    }\n\n    getServices() {\n        return Data.Services;\n    }\n}","import React from 'react';\nimport {Line} from 'react-chartjs-2';\n\nfunction TrendChart(props) {\n  console.log(props);\n\n  return (\n    <div>\n        <Line          \n          responsive=\"true\"\n          data={{labels: props.data.map(d => d.WeekOf),\n            datasets: [\n              {\n                label: 'Yr-over-Yr % Vol Growth',\n                fill: 'none',\n                backgroundColor: '#b9c246',\n                pointRadius: 0.5,\n                borderColor: '#b9c246',\n                borderWidth: 2,\n                lineTension: 0,\n                data: props.data.map(d => d.VolGrowth)\n              },\n              {\n                label: 'Yr-over-Yr % Txn Growth',\n                fill: 'none',\n                lineTension: 0,\n                pointRadius: 0.5,\n                backgroundColor: '#e2431e',\n                borderColor: '#e2431e',\n                borderWidth: 2,\n                data: props.data.map(d => d.TxnGrowth)\n              },\n              {\n                label: 'Yr-over-Yr % Vol Growth AVG',\n                fill: 'none',\n                lineTension: 0,\n                pointRadius: 0.5,\n                borderWidth: 2,     \n                borderDash: [5, 5],\n                backgroundColor: '#572a1a',\n                borderColor: '#572a1a',\n                data: props.data.map(d => d.VolGrowthAVG)\n              },\n              {\n                label: 'Yr-over-Yr % Txn Growth AVG',\n                fill: 'none',\n                lineTension: 0,\n                pointRadius: 0.5,\n                borderWidth: 2,\n                borderDash: [5, 5],\n                backgroundColor: 'blue',\n                borderColor: 'blue',\n                data: props.data.map(d => d.TxnGrowthAVG)\n              }\n            ]}}\n            options={{\n              responsive: true,\n              interaction: {\n                mode: 'index',\n                intersect: false,\n              },\n              hover: {\n                mode: 'index',\n                intersec: false\n              },\n              title:{\n                display:false,\n                fontSize:20\n              },\n              legend:{\n                display:true,\n                position:'right'\n              },\n              scales: {\n                // xAxes: [\n                //   {\n                //     gridLines:{\n                //       color: 'cyan'\n                //     },\n                //     scaleLabel: {\n                //       labelString: 'Week of...',\n                //       display: true,\n                //       fontColor: 'blue',\n                //       fontSize: 20\n                //     },\n                //     ticks: {\n                //       fontColor: 'green'\n                //     }\n                //   }\n                // ],\n                // y: [\n                //   {\n                //     gridLines:{\n                //       color: 'cyan'\n                //     },\n                //     scaleLabel: {\n                //       labelString: 'Percentage %',\n                //       display: true,\n                //       fontColor: 'blue',\n                //       fontSize: 20\n                //     },\n                //     ticks: {\n                //       fontColor: 'green'\n                //     }\n                //   }\n                // ]\n                x: {\n                  grid: {\n                    display: false\n                  },\n                  // display: true,\n                  // title: {\n                  //   display: true,\n                  //   text: 'Week Of...'\n                  // },\n                  display: true,\n                  title: {\n                    display: true,\n                    \n                    text: 'Week Of...',\n                    color: '#911',\n                    font: {\n                      family: 'Comic Sans MS',\n                      size: 16,\n                      weight: 'bold',\n                      lineHeight: 1.2,\n                    },\n                    padding: {top: 20, left: 0, right: 0, bottom: 0}\n                }\n              },\n                y: {\n                  type: 'linear',\n                  display: true,\n                  position: 'left',\n                  title: {\n                    display: true,\n                    text: '%'\n                  },\n                  ticks: {\n                    // forces step size to be 50 units\n                    stepSize: 15\n                  },\n                  // grid line settings\n                  grid: {\n                    display: true\n                  },\n                },\n              }\n            }}\n          />\n    </div>\n  );\n}\n\nexport default TrendChart;","import React from 'react';\nimport DataService from '../api/DataService';\nimport TrendChart from './TrendChart'\n\nfunction Retail() {\n  let ds = new DataService();\n  const ChartData = ds.getRetail();\n\n  return (\n    <div className=\"\">\n        <h3>National Consumer Spending Trends - Retail</h3>\n        <br />\n        <TrendChart data={ChartData} />      \n    </div>\n  );\n}\n\nexport default Retail;","import React from 'react';\nimport DataService from '../api/DataService';\nimport TrendChart from './TrendChart';\n\nfunction TravelEnt() {  \n  let ds = new DataService();\n  const TravelEntData = ds.getTravelEnt();\n\n  return (\n    <div>\n        <h3>National Consumer Spending Trends - Travel & Entertainment</h3>\n        <br />\n        <div>\n          <TrendChart data={TravelEntData} />\n        </div>\n    </div>\n  );\n}\n\nexport default TravelEnt;","import React from 'react';\nimport DataService from '../api/DataService';\nimport TrendChart from './TrendChart';\n\nfunction Services() {\n  let ds = new DataService();\n  const ServicesData = ds.getServices();\n\n  return (\n    <div>\n        <h3>National Consumer Spending Trends - Services</h3>\n        <br />\n        <div>\n          <TrendChart data={ServicesData} />\n        </div>\n    </div>\n  );\n}\n\nexport default Services;","import React, { useState, useEffect } from 'react';\nimport DataService from '../api/DataService';\nimport Chart from \"react-google-charts\";\n\nfunction GoogleCharts() {  \n  const [Retail, setRetail] = useState([]);\n  let ds = new DataService();\n\n  useEffect(() => {\n    populateRetailChartData();\n  }, []);\n\n  function populateRetailChartData() {\n    const columns = [\n      { type: \"string\", label: \"Week Of\" },\n      { type: \"number\", label: \"Yr-over-Yr % Vol Growth\" },\n      { type: \"number\", label: \"Yr-over-Yr % Txn Growth\" },\n      { type: \"number\", label: \"Yr-over-Yr % Vol Growth AVG\" },\n      { type: \"number\", label: \"Yr-over-Yr % Txn Growth AVG\" }\n    ];\n\n    let items = ds.getRetail();\n    let dataRows = [];\n    for (let i = 0; i < items.length; i++) {\n      let para_arr = [];\n      para_arr.push(items[i]['WeekOf'] ? items[i]['WeekOf'] : \"0\")\n      para_arr.push(items[i]['VolGrowth'] ? items[i]['VolGrowth'] : 0)\n      para_arr.push(items[i]['TxnGrowth'] ? items[i]['TxnGrowth'] : 0)\n      para_arr.push(items[i]['VolGrowthAVG'] ? items[i]['VolGrowthAVG'] : 0)\n      para_arr.push(items[i]['TxnGrowthAVG'] ? items[i]['TxnGrowthAVG'] : 0)\n      dataRows.push(para_arr);\n    }\n    let resultData = [columns, ...dataRows];\n    setRetail(resultData);\n  }\n\n  return (\n    <div>\n        <h3>National Consumer Spending Trends - Retail using Google Charts</h3>\n        <br />\n        <div>\n          <Chart\n            chartType=\"LineChart\"\n            data={Retail}\n            loader={<div>Loading National Consumer Spending Trends Retail Chart....</div>}\n            graphID=\"LineChart-Retail\"\n            width=\"100%\"\n            height=\"400px\"\n            options={{\n              title: '',\n              legend: 'top',\n              hAxis: {\n                title: 'Week Of...',\n              },\n              vAxis: {\n                title: '%',\n              },\n              series: {\n                2: {\n                  lineDashStyle: [4, 4]\n                },\n                3: {\n                  lineDashStyle: [4, 4]\n                }\n              },\n            }}\n          />\n        </div>\n    </div>\n  );\n}\n\nexport default GoogleCharts;","import React, { useState } from 'react';\nimport Retail from './Retail';\nimport TravelEnt from './TravelEnt';\nimport Services from './Services';\nimport GoogleCharts from './GoogleCharts';\nimport '../assets/main.css';\n\nfunction App() {\n  const [selectedTabIndex, setSelectedTabIndex] = useState(1);\n\n  function onTabSelection(tabIndex){\n    setSelectedTabIndex(tabIndex);\n  }\n  \n  return (\n    <div className=\"container-fluid\">\n          <div className=\"card\">\n            <ul className=\"nav nav-tabs bg-info text-dark\">              \n              <li className=\"nav-item\">\n                <a className={selectedTabIndex === 1 ? 'nav-link active' : 'nav-link'} href=\"#Retail\"\n                onClick={() => onTabSelection(1)} >Retail</a>\n              </li>\n              <li className=\"nav-item\">\n                <a className={selectedTabIndex === 2 ? 'nav-link active' : 'nav-link'} href=\"#TravelEnt\"\n                onClick={() => onTabSelection(2)} >Travel & Entertainment</a>\n              </li>\n              <li className=\"nav-item\">\n                <a className={selectedTabIndex === 3 ? 'nav-link active' : 'nav-link'} href=\"#Services\"\n                onClick={() => onTabSelection(3)} >Services</a>\n              </li>\n              <li className=\"nav-item\">\n                <a className={selectedTabIndex === 4 ? 'nav-link active' : 'nav-link'} href=\"#GoogleCharts\"\n                onClick={() => onTabSelection(4)} >Google Charts</a>\n              </li>\n            </ul>\n            <div className=\"tab-content \">\n              <div className={selectedTabIndex === 1 ? 'tab-pane fade show active' : 'tab-pane fade'} id=\"Retail\">\n                <Retail />\n              </div>\n              <div className={selectedTabIndex === 2 ? 'tab-pane fade show active' : 'tab-pane fade'} id=\"TravelEnt\">\n                <TravelEnt />\n              </div>\n              <div className={selectedTabIndex === 3 ? 'tab-pane fade show active' : 'tab-pane fade'} id=\"Services\">\n                <Services />\n              </div>\n              <div className={selectedTabIndex === 4 ? 'tab-pane fade show active' : 'tab-pane fade'} id=\"GoogleCharts\">\n                <GoogleCharts />\n              </div>\n            </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}